00a00113 // addi x2, x0, 10        // x2 = 10 (0x0A)
fff00193 // addi x3, x0, -1        // x3 = -1 (0xFFFFFFFF em unsigned)
01400213 // addi x4, x0, 20        // x4 = 20 (0x14)
00000293 // addi x5, x0, 0         // x5 = 0
0041f263 // bgeu x3, x4, geu1      // x3 >=u x4? Sim, 0xFFFFFFFF > 20, pula
00128293 // addi x5, x5, 1         // x5 += 1 (não executado)
00228293 // addi x5, x5, 2         // geu1: x5 += 2
0021f263 // bgeu x3, x2, geu2      // x3 >=u x2? Sim, 0xFFFFFFFF > 10, pula
00428293 // addi x5, x5, 4         // x5 += 4 (não executado)
00828293 // addi x5, x5, 8         // geu2: x5 += 8
0031f263 // bgeu x3, x3, geu3      // x3 >=u x3? Sim, iguais, pula
01028293 // addi x5, x5, 16        // x5 += 16 (não executado)
02028293 // addi x5, x5, 32        // geu3: x5 += 32
00317263 // bgeu x2, x3, geu4      // x2 >=u x3? Não, 10 < 0xFFFFFFFF, não pula
04028293 // addi x5, x5, 64        // x5 += 64
00227263 // bgeu x4, x2, geu5      // x4 >=u x2? Sim, 20 > 10, pula
08028293 // addi x5, x5, 128       // x5 += 128 (não executado)
10028293 // addi x5, x5, 256       // geu5: x5 += 256
40000a13 // addi x20, x0, 0x400    // x20 = 0x400
014a0a33 // add  x20, x20, x20     // x20 = 0x800
005a2023 // sw   x5, 0(x20)        // Armazena x5 em M[0x800]
00100073 // ebreak                 // Fim do programa